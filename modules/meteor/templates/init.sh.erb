<%= scope.function_template(["meteor/headers/_#{@osfamily.downcase}.sh.erb"]) %>

set -e

NAME=<%= @fqdn %>
SOURCE_DIR=<%= scope['vars::apps_root'] %>/<%= @fqdn %>
SOURCE_FILE=main.js
SOURCE_FILE_PATH=$SOURCE_DIR/$SOURCE_FILE
MONGO_BASE=mongodb://localhost:27017

export PORT=8080
export ROOT_URL=<%= @virtual ? 'http' : 'https' %>://app.<%= @fqdn %>
export MONGO_URL=$MONGO_BASE/<%= scope['mongo::database'] %>
export FOREVER_ROOT=/var/run/forever

user=<%= scope['user::deployer::username'] %>
pidfile=/var/run/$NAME.pid
lockfile=/var/lock/$NAME
logfile=/var/log/nodejs/$NAME-node.log

forever=`which forever`

if [ -z "$forever" ]; then
  echo "ERROR: can't find forever"
  exit 1
fi

start_options="-l $logfile -a --pidFile $pidfile --minUptime 5000 --spinSleepTime 2000"
start_cmd="$forever start $start_options $SOURCE_FILE_PATH > /dev/null 2>&1"
stop_cmd="$forever stop $SOURCE_FILE_PATH > /dev/null 2>&1"

export NODE_PATH=$NODE_PATH:/usr/lib/node_modules

set -u

start() {
  echo -n "Starting $NAME node instance: "

  mkdir -p /var/log/nodejs
  chown $user /var/log/nodejs

  mkdir -p $FOREVER_ROOT
  chown $user $FOREVER_ROOT

  touch $logfile
  chown $user $logfile

  touch $pidfile
  chown $user $pidfile

  su -m -c "$start_cmd" - $user

  RETVAL=$?

  [ $RETVAL -eq 0 ] && touch $lockfile

  echo
}

stop() {
  echo -n "Stopping $NAME node instance: "

  su -m -c "$stop_cmd" - $user

  RETVAL=$?

  [ $RETVAL -eq 0 ] && rm -f $lockfile

  echo
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage:  {start|stop|restart}"
    exit 1
    ;;
esac

exit $RETVAL
