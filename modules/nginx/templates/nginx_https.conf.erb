worker_processes 1;
user www-data www-data;

error_log /var/log/nginx/error.log;
pid       /var/run/nginx.pid;

events {
  worker_connections 1024;
  accept_mutex off; # "on" if nginx worker_processes > 1
}

http {
  include mime.types;
  default_type application/octet-stream;

  access_log  /var/log/nginx/access.log combined;

  types_hash_max_size 2048;
  server_names_hash_bucket_size 64;

  sendfile on;

  tcp_nopush on;
  tcp_nodelay off;

  gzip on;
  gzip_http_version 1.1;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/xml text/css
             text/comma-separated-values text/javascript image/svg+xml
             application/x-javascript application/atom+xml application/json;

  upstream unicorn {
    server unix:/tmp/unicorn.sock fail_timeout=0;
  }

  server {
    listen 80 default deferred;
    server_name  ~^(?<subdomain>.+)?(?<domain>\.<%= @fqdn.gsub('.', '\.') %>)$;
    rewrite      ^ https://$subdomain$domain$request_uri? permanent;
  }

  server {
    listen 443 default deferred;
    server_name <%= @fqdn %> *.<%= @fqdn %>

    client_max_body_size 4G;
    server_name _;

    keepalive_timeout 5;

    # path for static files
    root <%= scope.lookupvar('vars::apps_root') %>/<%= @fqdn %>/current/public;

    ssl                  on;
    ssl_certificate      /etc/ssl/certs/<%= @fqdn %>/<%= @fqdn %>.bundle-crt;
    ssl_certificate_key  /etc/ssl/private/<%= @fqdn %>/<%= @fqdn %>.key;

    ssl_session_timeout  5m;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    ssl_session_cache shared:SSL:10m;

    try_files $uri/index.html $uri.html $uri @app;

    location @app {
      # an HTTP header important enough to have its own Wikipedia entry:
      #   http://en.wikipedia.org/wiki/X-Forwarded-For
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # enable this if you forward HTTPS traffic to unicorn,
      # this helps Rack set the proper URL scheme for doing redirects:
      proxy_set_header X-Forwarded-Proto $scheme;

      # pass the Host: header from the client right along so redirects
      # can be set properly within the Rack application
      proxy_set_header Host $http_host;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;

      # The Rack application may also set "X-Accel-Buffering (yes|no)"
      # in the response headers do disable/enable buffering on a
      # per-response basis.
      # proxy_buffering off;

      proxy_pass http://unicorn;
    }

    # Rails error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root <%= scope.lookupvar('vars::apps_root') %>/<%= @fqdn %>/public;
    }
  }
}
