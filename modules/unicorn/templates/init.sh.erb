#!/bin/sh
set -e

# Example init script, this can be used with nginx, too,
# since nginx and unicorn accept the same signals
CURRENT_USER=`id -nu`
USER=<%= scope.lookupvar('user::deployer::user') %>
USER_HOME=<%= scope.lookupvar('user::deployer::home') %>
BUNDLE=$USER_HOME/.rbenv/shims/bundle

TIMEOUT=${TIMEOUT-60}
APP_ROOT=<%= scope.lookupvar('vars::apps_root') %>/<%= @fqdn %>/current
PID=/tmp/unicorn.pid
ENV=<%= @virtual == 'virtualbox' ? 'sandbox' : 'production' %>
CMD="cd $APP_ROOT; $BUNDLE exec $APP_ROOT/bin/unicorn -D -c $APP_ROOT/config/unicorn.rb -E $ENV"

action="$1"

set -u

cd $APP_ROOT || exit 1

run () {
  if [ $CURRENT_USER = $USER ]; then
    bash -c "$CMD"
  else
    su -c "$CMD" - $USER
  fi
}

sig () {
  test -s "$PID" && kill -$1 `cat $PID`
}

case $action in
start)
  sig 0 && echo >&2 "Already running" && exit 0
  run
  ;;
stop)
  sig QUIT && exit 0
  echo >&2 "Not running"
  ;;
force-stop)
  sig TERM && exit 0
  echo >&2 "Not running"
  ;;
restart|reload)
  sig HUP && echo reloaded OK && exit 0
  echo >&2 "Couldn't reload, starting '$CMD' instead"
  run
  ;;
upgrade)
  sig USR2 && exit 0
  echo >&2 "Couldn't upgrade, starting '$CMD' instead"
  run
  ;;
reopen-logs)
  sig USR1
  ;;
*)
  echo >&2 "Usage: $0 <start|stop|restart|upgrade|force-stop|reopen-logs>"
  exit 1
  ;;
esac
